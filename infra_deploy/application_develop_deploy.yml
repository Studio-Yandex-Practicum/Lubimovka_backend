version: '3.8'

services:
  postgres:
    image: postgres:13.3
    container_name: postgres_develop
    restart: always
    volumes:
      - postgres_data:/var/lib/postgresql/data
    env_file:
      - .env-dev
    networks:
      - develop_db_network
  backend:
    image: "${IMAGE_BACK}:${IMAGE_BACK_TAG}"
    container_name: backend_develop
    restart: always
    volumes:
      - static_value:/code/staticfiles/
      - media_value:/code/media/
    depends_on:
      - postgres
    env_file:
      - .env-dev
    networks:
      - develop_db_network
      - swag_network
  migrations:
    image: "${IMAGE_BACK}:${IMAGE_BACK_TAG}"
    container_name: migrations_develop
    volumes:
      - static_value:/code/staticfiles/
      - media_value:/code/media/
    command: >
      sh -c "python manage.py migrate &&
             python manage.py collectstatic --noinput"
    depends_on:
      - backend
    env_file:
      - .env-dev
    networks:
      - develop_db_network
  swag:
    image: ghcr.io/linuxserver/swag
    container_name: swag_deploy
    cap_add:
      - NET_ADMIN
    environment:
      - TZ=Europe/Moscow
      - VALIDATION=http
#      - SUBDOMAINS=${DEV_SUBDOMAIN},${TEST_SUBDOMAIN}
      - SUBDOMAINS=${DEV_SUBDOMAIN}
      - ONLY_SUBDOMAINS=true
      - CERTPROVIDER=zerossl
    env_file:
      - .env-dev
    networks:
      - swag_network
    volumes:
      - ./swag/swag_nginx_develop.conf:/config/nginx/site-confs/default
      - static_value:/config/static/
      - media_value:/config/media/
      - static_value_test:/config/test/static/
      - media_value_test:/config/test/media/
    ports:
      - 443:443
      - 80:80
    restart: unless-stopped
  frontend_develop:
    image: "${IMAGE_FRONT}:${IMAGE_FRONT_TAG}"
    container_name: frontend_develop
    environment:
      BASE_URL: ${FRONT_BASE_URL}
      API_BASE_URL: ${DEVELOP_API_BASE_URL}
    networks:
      - swag_network
    ports:
      - "3005:3000"
    restart: always
    depends_on:
      - swag
  frontend_test:
    image: "${IMAGE_FRONT}:${IMAGE_FRONT_TAG}"
    container_name: frontend_test
    environment:
      BASE_URL: ${FRONT_BASE_URL}
      API_BASE_URL: ${TEST_API_BASE_URL}
    networks:
      - swag_network
    ports:
      - "3004:3000"
    restart: always
    depends_on:
      - swag

networks:
  swag_network:
    name: swag_network
  develop_db_network:
    name: develop_db_network

volumes:
  static_value:
    name: static_value
  media_value:
    name: media_value
  static_value_test:
    name: static_value_test
  media_value_test:
    name: media_value_test
  postgres_data:
    name: postgres_data

# Generated by Django 3.2.16 on 2023-02-21 20:17
import logging
import re

import yadisk
from django.db import migrations
from django.conf import settings
from apps.feedback import services

from apps.feedback.services.yandex_disk_export import publish_file

FILENAME_RE = re.compile(r"&filename=(.+?)&")
FAILED_TO_PUBLISH = "Cannot get public URL for application #{pk}"
FAILED_TO_UPDATE_SHEET = "Old format link was not found on the sheet for application #{pk}"
FAILED_TO_FIX_HYPERLINKS = "Error occured while trying to update hyperlinks on google table"
GENERAL_FAILURE = "An error has occured while trying to fix yandex disk link in the database for application #{pk}"
SUCCESS = "Link for application #{pk} was successfully updated from {old_url} to {new_url}; {rows} row(s) affected in the google table"

logger = logging.getLogger("django")


def fix_links(apps, schema_editor):
    yndx = yadisk.YaDisk(token=settings.YNDX_DISK_TOKEN)
    gs = services.GoogleSpreadsheets()
    Application = apps.get_model('feedback', 'ParticipationApplicationFestival')
    for application in Application.objects.filter(url_file_in_storage__contains="downloader.disk.yandex.ru"):
        try:
            old_url = application.url_file_in_storage
            name = FILENAME_RE.search(old_url).groups()[0]
            if not name:
                continue
            year = application.festival_year
            path = f"{year}/{name}"
            new_url = publish_file(yndx, path)
            if not new_url:
                logger.warning(msg=FAILED_TO_PUBLISH.format(pk=application.pk))
                continue
            application.url_file_in_storage = new_url
            rows_changed = gs.find_and_replace(old_url, f"=HYPERLINK(\"{new_url}\" ; \"{new_url}\")")
            application.save()
            logger.debug(msg=SUCCESS.format(pk=application.pk, old_url=old_url, new_url=new_url, rows=rows_changed))
        except Exception:
            logger.exception(msg=GENERAL_FAILURE.format(pk=application.pk))


class Migration(migrations.Migration):

    dependencies = [
        ('feedback', '0003_auto_20220720_1135'),
    ]

    operations = [
        migrations.RunPython(fix_links, reverse_code=migrations.RunPython.noop),
    ]

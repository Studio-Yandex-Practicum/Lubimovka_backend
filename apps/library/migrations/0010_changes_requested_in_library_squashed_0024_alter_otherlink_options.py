# Generated by Django 3.2.11 on 2022-01-29 10:25

import apps.library.utilities
import apps.library.validators
import datetime
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import phonenumber_field.modelfields


def add_short_list_program(apps, schema_editor):
    Program = apps.get_model('library', 'ProgramType')
    Program.objects.create(
        name="Шорт-лист",
        slug="short-list"
    )


class Migration(migrations.Migration):

    replaces = [('library', '0010_changes_requested_in_library'), ('library', '0011_auto_20211118_2204'), ('library', '0012_auto_20211127_0741'), ('library', '0013_programtype_slug'), ('library', '0014_add_short_list_program'), ('library', '0015_auto_20211210_1116'), ('library', '0016_performance_duration'), ('library', '0017_participation_birth_year'), ('library', '0018_alter_play_year'), ('library', '0019_perfomance_text_limit'), ('library', '0020_alter_play_year'), ('library', '0021_auto_20220118_1944'), ('library', '0022_auto_20220126_2032'), ('library', '0023_alter_author_person'), ('library', '0024_alter_otherlink_options')]

    dependencies = [
        ('core', '0018_auto_20211209_1958_squashed_0030_auto_20220127_1720'),
        ('articles', '0001_squashed_0009_project_intro'),
        ('afisha', '0004_auto_20211007_1713_squashed_0008_alter_event_type'),
        ('library', '0003_auto_20211013_0054_squashed_0009_alter_author_options'),
        ('core', '0005_settings_squashed_0017_data_add_type_roles'),
    ]

    operations = [
        migrations.AlterModelOptions(
            name='author',
            options={'ordering': ('person__last_name',), 'verbose_name': 'Автор', 'verbose_name_plural': 'Авторы'},
        ),
        migrations.AlterField(
            model_name='performance',
            name='video',
            field=models.URLField(blank=True, null=True, unique=True, verbose_name='Видео'),
        ),
        migrations.RenameField(
            model_name='masterclass',
            old_name='event',
            new_name='events',
        ),
        migrations.RenameField(
            model_name='performance',
            old_name='event',
            new_name='events',
        ),
        migrations.RenameField(
            model_name='reading',
            old_name='event',
            new_name='events',
        ),
        migrations.AlterField(
            model_name='masterclass',
            name='events',
            field=models.OneToOneField(on_delete=django.db.models.deletion.PROTECT, related_name='masterclass', to='afisha.commonevent', verbose_name='События'),
        ),
        migrations.AlterField(
            model_name='performance',
            name='events',
            field=models.OneToOneField(on_delete=django.db.models.deletion.PROTECT, related_name='performance', to='afisha.commonevent', verbose_name='События'),
        ),
        migrations.AlterField(
            model_name='reading',
            name='events',
            field=models.OneToOneField(on_delete=django.db.models.deletion.PROTECT, related_name='reading', to='afisha.commonevent', verbose_name='События'),
        ),
        migrations.CreateModel(
            name='TeamMember',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Член команды',
                'verbose_name_plural': 'Члены команды',
                'ordering': ('role',),
            },
        ),
        migrations.RemoveField(
            model_name='masterclass',
            name='host',
        ),
        migrations.RemoveField(
            model_name='reading',
            name='director',
        ),
        migrations.RemoveField(
            model_name='reading',
            name='dramatist',
        ),
        migrations.AddField(
            model_name='masterclass',
            name='project',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='masterclasses', to='articles.project', verbose_name='Проект'),
        ),
        migrations.AddField(
            model_name='performance',
            name='project',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='performances', to='articles.project', verbose_name='Проект'),
        ),
        migrations.AddField(
            model_name='reading',
            name='project',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='readings', to='articles.project', verbose_name='Проект'),
        ),
        migrations.DeleteModel(
            name='PerformancePerson',
        ),
        migrations.AddField(
            model_name='teammember',
            name='masterclass',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='team_members', to='library.masterclass', verbose_name='Мастер-класс'),
        ),
        migrations.AddField(
            model_name='teammember',
            name='performance',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='team_members', to='library.performance', verbose_name='Спектакль'),
        ),
        migrations.AddField(
            model_name='teammember',
            name='person',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='team_members', to='core.person', verbose_name='Член команды'),
        ),
        migrations.AddField(
            model_name='teammember',
            name='reading',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='team_members', to='library.reading', verbose_name='Читка'),
        ),
        migrations.AddField(
            model_name='teammember',
            name='role',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='team_members', to='core.role', verbose_name='Роль'),
        ),
        migrations.AddField(
            model_name='masterclass',
            name='persons',
            field=models.ManyToManyField(related_name='masterclasses', through='library.TeamMember', to='core.Person', verbose_name='Члены команды'),
        ),
        migrations.AddField(
            model_name='reading',
            name='persons',
            field=models.ManyToManyField(related_name='readings', through='library.TeamMember', to='core.Person', verbose_name='Члены команды'),
        ),
        migrations.AddField(
            model_name='performance',
            name='persons',
            field=models.ManyToManyField(related_name='performances', through='library.TeamMember', to='core.Person', verbose_name='Члены команды'),
        ),
        migrations.AddConstraint(
            model_name='teammember',
            constraint=models.UniqueConstraint(fields=('person', 'role', 'performance'), name='unique_person_role_per_performance'),
        ),
        migrations.AddConstraint(
            model_name='teammember',
            constraint=models.UniqueConstraint(fields=('person', 'role', 'reading'), name='unique_person_role_per_reading'),
        ),
        migrations.AddConstraint(
            model_name='teammember',
            constraint=models.UniqueConstraint(fields=('person', 'role', 'masterclass'), name='unique_person_role_per_masterclass'),
        ),
        migrations.AlterModelOptions(
            name='otherlink',
            options={'ordering': ('order_number',), 'verbose_name': 'Ссылка на сторонний ресурс', 'verbose_name_plural': 'Ссылки на стороннии ресурсы'},
        ),
        migrations.AddField(
            model_name='programtype',
            name='slug',
            field=models.SlugField(default=1, max_length=40, unique=True, verbose_name='Slug'),
            preserve_default=False,
        ),
        migrations.RunPython(
            add_short_list_program,
        ),
        migrations.AlterField(
            model_name='participationapplicationfestival',
            name='file',
            field=models.FileField(help_text="Файл в одно из форматов ('doc', 'docx', 'txt', 'odt', 'pdf')", upload_to=apps.library.utilities.generate_class_name_path, validators=[django.core.validators.FileExtensionValidator(('doc', 'docx', 'txt', 'odt', 'pdf'))], verbose_name='Файл'),
        ),
        migrations.AlterField(
            model_name='participationapplicationfestival',
            name='phone_number',
            field=phonenumber_field.modelfields.PhoneNumberField(help_text='Номер телефона указывается в формате +7', max_length=128, region=None),
        ),
        migrations.AddField(
            model_name='performance',
            name='duration',
            field=models.DurationField(default=datetime.timedelta(seconds=5100), verbose_name='Продолжительность'),
        ),
        migrations.RemoveConstraint(
            model_name='participationapplicationfestival',
            name='unique_application',
        ),
        migrations.RemoveField(
            model_name='participationapplicationfestival',
            name='birthday',
        ),
        migrations.AddField(
            model_name='participationapplicationfestival',
            name='birth_year',
            field=models.PositiveSmallIntegerField(default=2000, validators=[apps.library.validators.year_validator], verbose_name='Год рождения'),
            preserve_default=False,
        ),
        migrations.AlterField(
            model_name='participationapplicationfestival',
            name='phone_number',
            field=phonenumber_field.modelfields.PhoneNumberField(help_text='Номер телефона указывается в формате +7', max_length=128, region=None, verbose_name='Номер телефона'),
        ),
        migrations.AddConstraint(
            model_name='participationapplicationfestival',
            constraint=models.UniqueConstraint(fields=('first_name', 'last_name', 'birth_year', 'city', 'phone_number', 'email', 'title', 'year'), name='unique_application'),
        ),
        migrations.AlterField(
            model_name='play',
            name='year',
            field=models.PositiveSmallIntegerField(validators=[django.core.validators.MinValueValidator(1990), django.core.validators.MaxValueValidator(2022)], verbose_name='Год написания пьесы'),
        ),
        migrations.AlterField(
            model_name='performance',
            name='text',
            field=models.TextField(max_length=500, verbose_name='Полное описание'),
        ),
        migrations.AlterField(
            model_name='play',
            name='year',
            field=models.PositiveSmallIntegerField(validators=[django.core.validators.MinValueValidator(1990), django.core.validators.MaxValueValidator(2200)], verbose_name='Год написания пьесы'),
        ),
        migrations.AlterField(
            model_name='performancemediareview',
            name='pub_date',
            field=models.DateTimeField(blank=True, null=True, verbose_name='Дата публикации'),
        ),
        migrations.AlterField(
            model_name='performancemediareview',
            name='url',
            field=models.URLField(blank=True, null=True, unique=True, verbose_name='Ссылка на отзыв'),
        ),
        migrations.AlterField(
            model_name='performancereview',
            name='pub_date',
            field=models.DateTimeField(blank=True, null=True, verbose_name='Дата публикации'),
        ),
        migrations.AlterField(
            model_name='performancereview',
            name='url',
            field=models.URLField(blank=True, null=True, unique=True, verbose_name='Ссылка на отзыв'),
        ),
        migrations.AlterField(
            model_name='otherplay',
            name='name',
            field=models.CharField(max_length=70, verbose_name='Название'),
        ),
        migrations.AlterField(
            model_name='play',
            name='name',
            field=models.CharField(max_length=70, unique=True, verbose_name='Название пьесы'),
        ),
        migrations.AlterField(
            model_name='author',
            name='person',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='authors', to='core.person', verbose_name='Человек'),
        ),
        migrations.AlterModelOptions(
            name='otherlink',
            options={'ordering': ('order_number',), 'verbose_name': 'Публикации и другие материалы', 'verbose_name_plural': 'Публикации и другие материалы'},
        ),
        migrations.AlterField(
            model_name='performance',
            name='description',
            field=models.TextField(max_length=500, verbose_name='Краткое описание'),
        ),
    ]
